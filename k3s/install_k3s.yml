---
- name: Install k3s on single node
  hosts: localhost
  gather_facts: false
  vars:
    ansible_user: kevin
    public_nic: gdale-rancher-vm1-publicip1
    rsg: rsg-rancher
    k3s_version: "v1.28.7+k3s1"
  tasks:
    - name: Check key
      command: ssh-add -l
      
    - name: Get public ip info by name
      azure.azcollection.azure_rm_publicipaddress_info:
        resource_group: "{{ rsg }}"
        name: "{{ public_nic }}"
        cert_validation_mode: validate
        client_id: "{{ lookup('ansible.builtin.env', 'AZ_CLIENT_ID') }}"
        subscription_id: "{{ lookup('ansible.builtin.env', 'AZ_SUB_ID') }}"
        tenant: "{{ lookup('ansible.builtin.env', 'AZ_TENANT_ID') }}"
        secret: "{{ lookup('ansible.builtin.env', 'AZ_SECRET') }}"
      register: az_vm_info

    - name: Add host
      ansible.builtin.add_host:
        name: "{{ az_vm_info.publicipaddresses[0].ip_address }}"

    - name: Gather VM facts
      ansible.builtin.setup:
      delegate_to: "{{ az_vm_info.publicipaddresses[0].ip_address }}"
    
    - name: Configure k3s
      delegate_to: "{{ az_vm_info.publicipaddresses[0].ip_address }}"
      become: true
      block:
        - name: Disable UFW
          community.general.ufw:
            state: disabled

        - name: Download k3s install script
          ansible.builtin.get_url:
            url: https://get.k3s.io/
            timeout: 120
            dest: /usr/local/bin/k3s-install.sh
            owner: root
            group: root
            mode: 0755
        
        - name: Download K3s binary
          ansible.builtin.command:
            cmd: /usr/local/bin/k3s-install.sh -s - server
          environment:
            INSTALL_K3S_VERSION: "{{ k3s_version }}"
          changed_when: true
          register: install
        
        - name: Debug install
          ansible.builtin.debug:
            msg: "{{ install }}"